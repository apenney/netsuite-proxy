## Flox Environment Manifest -----------------------------------------
##
##   _Everything_ you need to know about the _manifest_ is here:
##
##               https://flox.dev/docs/concepts/manifest
##
## -------------------------------------------------------------------
# Flox manifest version managed by Flox CLI
version = 1


## Install Packages --------------------------------------------------
##  $ flox install gum  <- puts a package in [install] section below
##  $ flox search gum   <- search for a package
##  $ flox show gum     <- show all versions of a package
## -------------------------------------------------------------------
[install]
python3.pkg-path = "python3"
uv.pkg-path = "uv"
pre-commit.pkg-path = "pre-commit"
# gum.pkg-path = "gum"
# gum.version = "^0.14.5"


## Environment Variables ---------------------------------------------
##  ... available for use in the activated environment
##      as well as [hook], [profile] scripts and [services] below.
## -------------------------------------------------------------------
[vars]
# INTRO_MESSAGE = "It's gettin' Flox in here"


## Activation Hook ---------------------------------------------------
##  ... run by _bash_ shell when you run 'flox activate'.
## -------------------------------------------------------------------
[hook]
on-activate = '''
  # Create Python virtual environment if it doesn't exist
  if [ ! -d "$FLOX_ENV_PROJECT/.venv" ]; then
    echo "Creating Python virtual environment..."
    uv venv "$FLOX_ENV_PROJECT/.venv"
    echo "Installing Python dependencies..."
    uv sync
  fi

  #
'''


## Profile script ----------------------------------------------------
## ... sourced by _your shell_ when you run 'flox activate'.
## -------------------------------------------------------------------
[profile]
# Common setup for all shells
bash = '''
  # Activate Python virtual environment if it exists
  if [ -f "$FLOX_ENV_PROJECT/.venv/bin/activate" ]; then
    source "$FLOX_ENV_PROJECT/.venv/bin/activate"
    export PYTHONPATH=.:$PYTHONPATH
  fi
'''
zsh = '''
  # Activate Python virtual environment if it exists
  if [ -f "$FLOX_ENV_PROJECT/.venv/bin/activate" ]; then
    source "$FLOX_ENV_PROJECT/.venv/bin/activate"
  fi
'''
fish = '''
  # Activate Python virtual environment if it exists
  if test -f "$FLOX_ENV_PROJECT/.venv/bin/activate.fish"
    source "$FLOX_ENV_PROJECT/.venv/bin/activate.fish"
    set -x PYTHONPATH .:$PYTHONPATH
  end
  
  # 
'''


## Services ----------------------------------------------------------
##  $ flox services start             <- Starts all services
##  $ flox services status            <- Status of running services
##  $ flox activate --start-services  <- Activates & starts all
## -------------------------------------------------------------------
[services]
# myservice.command = "python3 -m http.server"


## Include ----------------------------------------------------------
## ... environments to create a composed environment
## ------------------------------------------------------------------
[include]
# environments = [
#     { dir = "../common" }
# ]


## Other Environment Options -----------------------------------------
[options]
# Systems that environment is compatible with
systems = [
  "aarch64-darwin",
  "aarch64-linux",
  "x86_64-darwin",
  "x86_64-linux",
]
# Uncomment to disable CUDA detection.
# cuda-detection = false
